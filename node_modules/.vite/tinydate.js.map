{
  "version": 3,
  "sources": ["../tinydate/dist/tinydate.mjs", "dep:tinydate"],
  "sourcesContent": ["var RGX = /([^{]*?)\\w(?=\\})/g;\n\nvar MAP = {\n\tYYYY: 'getFullYear',\n\tYY: 'getYear',\n\tMM: function (d) {\n\t\treturn d.getMonth() + 1;\n\t},\n\tDD: 'getDate',\n\tHH: 'getHours',\n\tmm: 'getMinutes',\n\tss: 'getSeconds',\n\tfff: 'getMilliseconds'\n};\n\nexport default function (str, custom) {\n\tvar parts=[], offset=0;\n\n\tstr.replace(RGX, function (key, _, idx) {\n\t\t// save preceding string\n\t\tparts.push(str.substring(offset, idx - 1));\n\t\toffset = idx += key.length + 1;\n\t\t// save function\n\t\tparts.push(custom && custom[key] || function (d) {\n\t\t\treturn ('00' + (typeof MAP[key] === 'string' ? d[MAP[key]]() : MAP[key](d))).slice(-key.length);\n\t\t});\n\t});\n\n\tif (offset !== str.length) {\n\t\tparts.push(str.substring(offset));\n\t}\n\n\treturn function (arg) {\n\t\tvar out='', i=0, d=arg||new Date();\n\t\tfor (; i<parts.length; i++) {\n\t\t\tout += (typeof parts[i]==='string') ? parts[i] : parts[i](d);\n\t\t}\n\t\treturn out;\n\t};\n}\n", "import d from \"./node_modules/tinydate/dist/tinydate.mjs\";export default d;"],
  "mappings": ";;;AAAA,IAAI,MAAM;AAEV,IAAI,MAAM;AAAA,EACT,MAAM;AAAA,EACN,IAAI;AAAA,EACJ,IAAI,SAAU,GAAG;AAChB,WAAO,EAAE,aAAa;AAAA;AAAA,EAEvB,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,KAAK;AAAA;AAGS,0BAAU,KAAK,QAAQ;AACrC,MAAI,QAAM,IAAI,SAAO;AAErB,MAAI,QAAQ,KAAK,SAAU,KAAK,GAAG,KAAK;AAEvC,UAAM,KAAK,IAAI,UAAU,QAAQ,MAAM;AACvC,aAAS,OAAO,IAAI,SAAS;AAE7B,UAAM,KAAK,UAAU,OAAO,QAAQ,SAAU,GAAG;AAChD,aAAQ,QAAQ,QAAO,IAAI,SAAS,WAAW,EAAE,IAAI,UAAU,IAAI,KAAK,KAAK,MAAM,CAAC,IAAI;AAAA;AAAA;AAI1F,MAAI,WAAW,IAAI,QAAQ;AAC1B,UAAM,KAAK,IAAI,UAAU;AAAA;AAG1B,SAAO,SAAU,KAAK;AACrB,QAAI,MAAI,IAAI,IAAE,GAAG,IAAE,OAAK,IAAI;AAC5B,WAAO,IAAE,MAAM,QAAQ,KAAK;AAC3B,aAAQ,OAAO,MAAM,OAAK,WAAY,MAAM,KAAK,MAAM,GAAG;AAAA;AAE3D,WAAO;AAAA;AAAA;;;ACrCiD,IAAO,oBAAQ;",
  "names": []
}
