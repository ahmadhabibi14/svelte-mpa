import {
  __export
} from "./chunk-HC4Q5QIB.js";

// node_modules/attractions/index.js
import { default as default2 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/button/button.svelte";
import { default as default3 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/text-field/text-field.svelte";
import { default as default4 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/radio-button/radio-group.svelte";
import { default as default5 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/radio-button/radio-button.svelte";
import { default as default6 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/checkbox/checkbox.svelte";
import { default as default7 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/checkbox/checkbox-group.svelte";
import { default as default8 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/card/card.svelte";
import { default as default9 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/dropdown/dropdown-shell.svelte";
import { default as default10 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/dropdown/dropdown.svelte";
import { default as default11 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/switch/switch.svelte";
import { default as default12 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/chip/chip.svelte";
import { default as default13 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/chip/radio-chip.svelte";
import { default as default14 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/chip/radio-chip-group.svelte";
import { default as default15 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/chip/checkbox-chip.svelte";
import { default as default16 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/chip/checkbox-chip-group.svelte";
import { default as default17 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/accordion/accordion.svelte";
import { default as default18 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/accordion/accordion-section.svelte";
import { default as default19 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/modal/modal.svelte";
import { default as default20 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/tab/tab.svelte";
import { default as default21 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/tab/tabs.svelte";
import { default as default22 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/typography/h1.svelte";
import { default as default23 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/typography/h2.svelte";
import { default as default24 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/typography/h3.svelte";
import { default as default25 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/typography/headline.svelte";
import { default as default26 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/typography/subhead.svelte";
import { default as default27 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/typography/label.svelte";
import { default as default28 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/dot/dot.svelte";
import { default as default29 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/divider/divider.svelte";
import { default as default30 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/snackbar/snackbar-container.svelte";
import { default as default31 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/snackbar/snackbar.svelte";
import { default as default32 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/star-rating/star-rating.svelte";
import { default as default33 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/dialog/dialog.svelte";
import { default as default34 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/popover/popover.svelte";
import { default as default35 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/popover/popover-button.svelte";
import { default as default36 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/file-input/file-input.svelte";
import { default as default37 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/file-input/file-dropzone.svelte";
import { default as default38 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/file-input/file-tile.svelte";
import { default as default39 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/date-picker/date-picker.svelte";
import { default as default40 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/date-picker/calendar.svelte";
import { default as default41 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/time-picker/time-picker.svelte";
import { default as default42 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/form-field/form-field.svelte";
import { default as default43 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/loading/loading.svelte";
import { default as default44 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/autocomplete/autocomplete.svelte";
import { default as default45 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/autocomplete/autocomplete-option.svelte";
import { default as default46 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/autocomplete/autocomplete-field.svelte";
import { default as default47 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/badge/badge.svelte";
import { default as default48 } from "E:/Er/Web/Node/svelte-mpa/node_modules/attractions/pagination/pagination.svelte";

// node_modules/attractions/utils/index.js
var utils_exports = {};
__export(utils_exports, {
  callOnSight: () => callOnSight,
  classes: () => classes,
  dynamicTransition: () => dynamic,
  escapeRegExp: () => escapeRegExp,
  events: () => events,
  formatFileSize: () => formatFileSize,
  formatFileType: () => formatFileType,
  getColorPickerStyles: () => getColorPickerStyles,
  range: () => range,
  ripple: () => ripple,
  s: () => pluralS
});

// node_modules/attractions/utils/call-on-sight.js
function callOnSight(node, { callback, args = [] }) {
  let observer = null;
  function onIntersect(entries, _observer) {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        callback(...args);
      }
    });
  }
  if (typeof IntersectionObserver !== "undefined") {
    observer = new IntersectionObserver(onIntersect, {
      root: null,
      threshold: 0.5
    });
    observer.observe(node);
  }
  return {
    destroy() {
      if (observer != null) {
        observer.disconnect();
      }
    }
  };
}

// node_modules/attractions/utils/classes.js
function classes(...args) {
  return args.filter((cls) => !!cls).join(" ");
}

// node_modules/attractions/utils/color-picker-styles.js
function getColorPickerStyles(hexColor) {
  if (hexColor == null) {
    return null;
  }
  if (hexColor.length !== 7) {
    console.error("Values of colored radio groups must be #XXXXXX hex colors.");
    return null;
  }
  let r, g, b, beforeR, beforeG, beforeB;
  const bgR = r = parseInt(hexColor.slice(1, 3), 16);
  const bgG = g = parseInt(hexColor.slice(3, 5), 16);
  const bgB = b = parseInt(hexColor.slice(5, 7), 16);
  beforeR = beforeG = beforeB = 255;
  const whiteThreshold = 240;
  const gray = 153;
  if (r > whiteThreshold && g > whiteThreshold && b > whiteThreshold) {
    r = g = b = beforeR = beforeG = beforeB = gray;
  }
  return `background-color: rgb(${bgR}, ${bgG}, ${bgB});
          border-color: rgb(${r}, ${g}, ${b});
          --r: ${r}; --g: ${g}; --b: ${b};
          --before-r: ${beforeR};
          --before-g: ${beforeG};
          --before-b: ${beforeB};`;
}

// node_modules/attractions/utils/dynamic-transition.js
function dynamic(node, { transition = null, options = null }) {
  if (transition === null) {
    return {
      delay: 0,
      duration: 0,
      css: () => ""
    };
  }
  return transition(node, options);
}

// node_modules/attractions/utils/escape-regexp.js
function escapeRegExp(string) {
  return string.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
}

// node_modules/attractions/utils/events.js
function events(node, args) {
  if (args != null) {
    for (const event of args) {
      node.addEventListener(event.name, event.handler);
    }
  }
  return {
    destroy() {
      if (args != null) {
        for (const event of args) {
          node.removeEventListener(event.name, event.handler);
        }
      }
    }
  };
}

// node_modules/attractions/utils/format-file-size.js
function formatFileSize(bytes) {
  const threshold = 1e3;
  if (Math.abs(bytes) < threshold) {
    return bytes + " B";
  }
  const units = ["KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
  let u = -1;
  const r = 10;
  do {
    bytes /= threshold;
    ++u;
  } while (Math.round(Math.abs(bytes) * r) / r >= threshold && u < units.length - 1);
  return bytes.toFixed(1) + " " + units[u];
}

// node_modules/attractions/utils/format-file-type.js
function formatFileType(filename) {
  const fragments = filename.split(".");
  return fragments[fragments.length - 1].toUpperCase();
}

// node_modules/attractions/utils/plural-s.js
function pluralS(amount) {
  return amount === 1 ? "" : "s";
}

// node_modules/attractions/utils/range.js
function* range(start, end, step = 1) {
  if (end == null) {
    end = start;
    start = 0;
  }
  if (step === 0) {
    throw new Error("Range must have a non-zero step.");
  }
  if (start >= end && step > 0 || start <= end && step < 0) {
    return;
  }
  for (let i = start; start < end ? i < end : i > end; i += step) {
    yield i;
  }
}

// node_modules/attractions/utils/ripple.js
function ripple(node, options = {}) {
  const props = {
    event: options.event || "click",
    transition: options.transition || 150,
    zIndex: options.zIndex || "100",
    bg: options.rippleColor || null,
    disabled: options.disabled || false
  };
  const handler = (event) => rippler(event, node, props);
  if (!props.disabled) {
    node.addEventListener(props.event, handler);
  }
  function rippler(event, target, { bg, zIndex, transition }) {
    const targetBorder = parseInt(getComputedStyle(target).borderWidth.replace("px", ""));
    const rect = target.getBoundingClientRect(), left = rect.left, top = rect.top, width = target.offsetWidth, height = target.offsetHeight, dx = event.clientX - left, dy = event.clientY - top, maxX = Math.max(dx, width - dx), maxY = Math.max(dy, height - dy), style = window.getComputedStyle(target), radius = Math.sqrt(maxX * maxX + maxY * maxY), border = targetBorder > 0 ? targetBorder : 0;
    const ripple2 = document.createElement("div");
    const rippleContainer = document.createElement("div");
    rippleContainer.className = "ripple-container";
    ripple2.className = "ripple";
    ripple2.style.marginTop = "0px";
    ripple2.style.marginLeft = "0px";
    ripple2.style.width = "1px";
    ripple2.style.height = "1px";
    ripple2.style.transition = `all ${transition}ms cubic-bezier(0.4, 0, 0.2, 1)`;
    ripple2.style.borderRadius = "50%";
    ripple2.style.pointerEvents = "none";
    ripple2.style.position = "relative";
    ripple2.style.zIndex = zIndex;
    if (bg !== null) {
      ripple2.style.backgroundColor = bg;
    }
    rippleContainer.style.position = "absolute";
    rippleContainer.style.left = 0 - border + "px";
    rippleContainer.style.top = 0 - border + "px";
    rippleContainer.style.height = "0";
    rippleContainer.style.width = "0";
    rippleContainer.style.pointerEvents = "none";
    rippleContainer.style.overflow = "hidden";
    const storedTargetPosition = target.style.position.length > 0 ? target.style.position : getComputedStyle(target).position;
    if (storedTargetPosition !== "relative" && storedTargetPosition !== "absolute") {
      target.style.position = "relative";
    }
    rippleContainer.appendChild(ripple2);
    target.appendChild(rippleContainer);
    ripple2.style.marginLeft = dx + "px";
    ripple2.style.marginTop = dy + "px";
    rippleContainer.style.width = width + "px";
    rippleContainer.style.height = height + "px";
    rippleContainer.style.borderTopLeftRadius = style.borderTopLeftRadius;
    rippleContainer.style.borderTopRightRadius = style.borderTopRightRadius;
    rippleContainer.style.borderBottomLeftRadius = style.borderBottomLeftRadius;
    rippleContainer.style.borderBottomRightRadius = style.borderBottomRightRadius;
    rippleContainer.style.direction = "ltr";
    setTimeout(() => {
      ripple2.style.width = radius * 2 + "px";
      ripple2.style.height = radius * 2 + "px";
      ripple2.style.marginLeft = dx - radius + "px";
      ripple2.style.marginTop = dy - radius + "px";
    }, 0);
    function clearRipple() {
      setTimeout(() => {
        ripple2.style.backgroundColor = "rgba(0, 0, 0, 0)";
      }, 250);
      setTimeout(() => {
        rippleContainer.parentNode.removeChild(rippleContainer);
      }, transition + 250);
      setTimeout(() => {
        let clearPosition = true;
        for (let i = 0; i < target.childNodes.length; i++) {
          if (target.childNodes[i].className === "ripple-container") {
            clearPosition = false;
          }
        }
        if (clearPosition) {
          if (storedTargetPosition !== "static") {
            target.style.position = storedTargetPosition;
          } else {
            target.style.position = "";
          }
        }
      }, transition + 250);
    }
    clearRipple();
  }
  return {
    destroy() {
      node.removeEventListener(props.event, handler);
    },
    update(newProps = {}) {
      if (newProps.disabled) {
        node.removeEventListener(props.event, handler);
      } else {
        node.addEventListener(props.event, handler);
      }
    }
  };
}
export {
  default17 as Accordion,
  default18 as AccordionSection,
  default44 as Autocomplete,
  default46 as AutocompleteField,
  default45 as AutocompleteOption,
  default47 as Badge,
  default2 as Button,
  default40 as Calendar,
  default8 as Card,
  default6 as Checkbox,
  default15 as CheckboxChip,
  default16 as CheckboxChipGroup,
  default7 as CheckboxGroup,
  default12 as Chip,
  default39 as DatePicker,
  default33 as Dialog,
  default29 as Divider,
  default28 as Dot,
  default10 as Dropdown,
  default9 as DropdownShell,
  default37 as FileDropzone,
  default36 as FileInput,
  default38 as FileTile,
  default42 as FormField,
  default22 as H1,
  default23 as H2,
  default24 as H3,
  default25 as Headline,
  default27 as Label,
  default43 as Loading,
  default19 as Modal,
  default48 as Pagination,
  default34 as Popover,
  default35 as PopoverButton,
  default5 as RadioButton,
  default13 as RadioChip,
  default14 as RadioChipGroup,
  default4 as RadioGroup,
  default31 as Snackbar,
  default30 as SnackbarContainer,
  default32 as StarRating,
  default26 as Subhead,
  default11 as Switch,
  default20 as Tab,
  default21 as Tabs,
  default3 as TextField,
  default41 as TimePicker,
  utils_exports as utils
};
//# sourceMappingURL=attractions.js.map
